
https://www.geeksforgeeks.org/program-find-minimum-maximum-element-array/
int maximum=-100;
void getmax(int i,int last,int arr[])
{   
    if(i<=last)
    {
       arr[i]>maximum?getmax(i=i+1,last,arr):i=i+1;
    }
    
}

int main()
{
     int arr[] = { 12, 1234, 45, 67, 1 };
    getmax(0,4,arr);
    cout<<maximum<<endl;

    return 0;
}



https://www.geeksforgeeks.org/sum-triangle-from-array/

int s[5]={0};
void recur(int k,int last,int arr[])
{
    if(k<=last)
    {
         s[k]=s[k]+s[k+1];
         cout<<s[k]<<" ";
         k++;
         recur(k,last,arr);
    }
}

int main()
{
     int arr[5] = { 1,2,3,4,5};
    int i=0;
    for(auto &val:arr)
    {  s[i]=arr[i];
        cout<<s[i]<<" ";
        i++;
    }
    cout<<endl;
    // cout<<"after\n";
    
    int last=3;
    for(int j=1;j<=4;j++)
    {
        recur(0,last,arr);
        last--;
        cout<<endl;
    }

    return 0;
}


//sort an array using recusrion

void insert(vector <int>& v,int temp)
{
    if(v.size()==0 || v[v.size()-1]<=temp)
    {
        v.push_back(temp);
        return ;
    }
    int value=v[v.size()-1];
    v.pop_back();
    insert(v,temp);
    v.push_back(value);
    
}

void sort(vector <int>& v)
{
    if(v.size()==1)
    {
        return ;
    }
    int temp=v[v.size()-1];
    v.pop_back();
    sort(v);
    insert(v,temp);
}

int main()
{
    
    int n;
    cout<<"Enter the number of elements \n";
    cin>>n;
   vector <int> v;
   for(int i=0;i<n;i++)
   {
       int x;
       cin>>x;
       v.push_back(x);
   }
   sort(v);
   cout<<"After sort \n";
   for(auto &val:v)
   {
       cout<<val<<" ";
   }
   

    return 0;
}

//sort a stack using recursion 

void insert( stack<int> &stack,int temp)
{
    if(stack.size()==1 || stack.top()<=temp)
    {
        stack.push(temp);
        return ;
    }
    int value=stack.top();
    stack.pop();
    insert(stack,temp);
    stack.push(temp);
}

void sort( stack<int> &stack)
{
    if(stack.top()==1)
    {
        return ;
    }
    int temp=stack.top();
    stack.pop();
    sort(stack);
    insert(stack,temp);
}


int main()
{
    
    int n;
    cout<<"Enter number of elements \n";
    cin>>n;
     stack<int> stack;
    for(int i=0;i<n;i++)
    {  cout<<"Enter a number \n";
        int x;
        cin>>x;
        stack.push(x);
    }
    
    sort(stack);

  //deleting middle element of a stack
  
  void solve(stack <int>& stack,int k)
{
if(stack.top()==-1)
{
    return ;
}
if(k==1)
{
    stack.pop();
    return ;
}
int value=stack.top();
stack.pop();
solve(stack,k-1);
stack.push(value);

}

int main()
{
    
    int n;
    cout<<"Enter number of elements \n";
    cin>>n;
     stack<int> stack;
    for(int i=0;i<n;i++)
    {  cout<<"Enter a number \n";
        int x;
        cin>>x;
        stack.push(x);
    }
    
  solve(stack,floor(n/2)+1);
  
   

